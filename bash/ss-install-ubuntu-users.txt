#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: https://mirrors.slickstack.io/bash/ss-install-ubuntu-users.txt ########################
#### path: /var/www/ss-install-ubuntu-users ########################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Reinstalls Linux OS users based on ss-config #########################################
#### module version: Ubuntu 22.04 LTS ##############################################################
#### sourced by: ss-install ########################################################################
#### bash aliases: ss install ubuntu users, ss install users #######################################
####################################################################################################

## SS-CONFIG MUST BE PROPERLY CONFIGURED AND ON CURRENT BUILD BEFORE RUNNING SS-INSTALL ##
## ENSURE YOUR SS-CONFIG BUILD REMAINS CURRENT BY RUNNING SS-UPDATE OCCASIONALLY ##

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### TABLE OF CONTENTS (SS-Install-Ubuntu-Users) ###################################################
####################################################################################################

## this is a brief summary of the different code snippets you will find in this script ##
## each section should be commented so you understand what is being accomplished ##

## A. Touch Timestamp File
## B. Message (Begin Script)
## C. Cleanup Temporary Files
## D. Configure Users + Passwords + Groups
## E. Configure Sudo Permissions
## F. Reset Permissions (Ubuntu Users)
## G. Cleanup Temporary Files
## H. Configure Ubuntu Bash Shortcuts

####################################################################################################
#### A. SS-Install-Ubuntu-Users: Touch Timestamp File ##############################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
ss_touch "${TIMESTAMP_SS_INSTALL_UBUNTU_USERS}"

####################################################################################################
#### B. SS-Install-Ubuntu-Users: Message (Begin Script) ############################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be noticed by sudo users who manually call ss core bash scripts ##

## echo message ##
echo -e "${COLOR_INFO}ss-install-ubuntu-users: Reinstalls Linux OS users based on ss-config... ${NOCOLOR}"
sleep "${SLEEP_MESSAGE_BEGIN}"

####################################################################################################
#### C. SS-Install-Ubuntu-Users: Cleanup Temporary Files ###########################################
####################################################################################################

## delete tmp files ##
ss_rm "${TMP_SUDOERS}"

####################################################################################################
#### D. SS-Install-Ubuntu-Users: Configure Users + Passwords + Groups ##############################
####################################################################################################

## set root password ##
echo "root:${ROOT_PASSWORD}" | /usr/sbin/chpasswd

## ensure root password never expires ##
# passwd -x -1 <username>
chage -E -1 -m 0 -M -1 -I -1 -W 99999 root
# chage -E -1 -m 0 -M -1 -I -1 -W 99999 $SUDO_USER
# chage -E -1 -m 0 -M -1 -I -1 -W 99999 $SFTP_USER

## add sudo user ##
ss_adduser "${SUDO_USER}"
echo "${SUDO_USER}:${SUDO_PASSWORD}" | /usr/sbin/chpasswd

## ensure home directory exists ##
mkhomedir_helper "${SUDO_USER}"

## add sftp user ##
ss_adduser "${SFTP_USER}"
echo "${SFTP_USER}:${SFTP_PASSWORD}" | /usr/sbin/chpasswd

## ensure home directory exists ##
mkhomedir_helper "${SFTP_USER}"

## ensure wordpress group exists ##
groupadd -f wordpress

## add SFTP_USER and www-data to wordpress group + add SFTP_USER to www-data group ##
usermod -a -G wordpress "${SFTP_USER}"
usermod -a -G wordpress www-data
usermod -a -G www-data "${SFTP_USER}"

####################################################################################################
#### E. SS-Install-Ubuntu-Users: Configure Sudo Permissions ########################################
####################################################################################################

## download latest versions ##
ss_wget_slow -O "${TMP_SUDOERS}" "${MIRROR_SUDOERS}"

## replace variables ##
sed -i "s/@SUDO_USER/${SUDO_USER}/g" "${TMP_SUDOERS}"

## copy files to their destinations ##
ss_mv "${TMP_SUDOERS}" /etc/sudoers

####################################################################################################
#### F. SS-Install-Ubuntu-Users: Reset Permissions (Ubuntu Users) ##################################
####################################################################################################

## run ss-perms-ubuntu-users ##
source "${PATH_SS_PERMS_UBUNTU_USERS}"

####################################################################################################
#### G. SS-Install-Ubuntu-Users: Cleanup Temporary Files ###########################################
####################################################################################################

## delete tmp files ##
ss_rm "${TMP_SUDOERS}"

####################################################################################################
#### H. SS-Install-Ubuntu-Users: Configure Ubuntu Bash Shortcuts ###################################
####################################################################################################

## here we reinstall bash run commands which requires the users to be installed already ##
## there is no drawback to running this repeatedly so we include it here casually ##

## run ss-install-ubuntu-bash ##
source "${PATH_SS_INSTALL_UBUNTU_BASH}"

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://askubuntu.com/questions/94060/run-adduser-non-interactively
## Ref: http://manpages.ubuntu.com/manpages/trusty/man8/adduser.8.html
## Ref: https://www.computerhope.com/unix/adduser.htm
## Ref: https://explainshell.com/explain?cmd=adduser+--disabled-password+--quiet+--system+--home+%2Fvar%2Frun%2Frails-new+--no-create-home+--gecos+%22Rails+New+daemon%22+--group+rails-new
## Ref: https://stackoverflow.com/questions/2150882/how-to-automatically-add-user-account-and-password-with-a-bash-script
## Ref: https://github.com/jupyterhub/jupyterhub/issues/2145
## Ref: https://serverfault.com/questions/167416/how-can-i-automatically-change-directory-on-ssh-login
## Ref: https://unix.stackexchange.com/questions/140602/how-do-i-start-all-shell-sessions-in-a-directory-other-than-home
## Ref: https://askubuntu.com/questions/335961/create-default-home-directory-for-existing-user-in-terminal
## Ref: https://unix.stackexchange.com/questions/121087/why-is-this-random-password-flagged-saying-it-is-too-simplistic-systematic

## SS_EOF
